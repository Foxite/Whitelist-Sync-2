buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

// Configure the shadow jar task
shadowJar {

}


version = "2.0.1-1.10.2-beta"
group = "com.potatosaucevfx.whitelistsync2"
archivesBaseName = "whitelistsync2"

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.10.2-12.18.3.2185" // 1.10.2
    // version = "1.11.2-13.20.1.2386" // 1.11.2
    // version = "1.12.2-14.23.5.2768" // 1.12.2
    runDir = "run"


    mappings = "snapshot_20161111" // 1.10.2
    // mappings = "snapshot_20161220" // 1.11.2
    // mappings = "snapshot_20171003" // 1.12.2
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile 'org.xerial:sqlite-jdbc:3.21.0.1'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile 'mysql:mysql-connector-java:8.0.8-dmr'
    // https://mvnrepository.com/artifact/com.sparkjava/spark-core/
    compile 'com.sparkjava:spark-core:2.8.0'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar